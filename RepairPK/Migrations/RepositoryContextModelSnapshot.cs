// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepairPK.Repository;

#nullable disable

namespace RepairPK.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RepairPK.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDate = new DateTime(2024, 6, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Content = "Консультация по ремонту материнской платы",
                            CustomerId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDate = new DateTime(2024, 6, 16, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Content = "Диагностика видеокарты",
                            CustomerId = 2
                        },
                        new
                        {
                            Id = 3,
                            AppointmentDate = new DateTime(2024, 6, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Content = "Замена блока питания",
                            CustomerId = 3
                        },
                        new
                        {
                            Id = 4,
                            AppointmentDate = new DateTime(2024, 6, 18, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Content = "Чистка системы охлаждения",
                            CustomerId = 4
                        },
                        new
                        {
                            Id = 5,
                            AppointmentDate = new DateTime(2024, 6, 19, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Content = "Установка SSD диска",
                            CustomerId = 5
                        });
                });

            modelBuilder.Entity("RepairPK.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Smith",
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Michael Johnson",
                            PhoneNumber = "1122334455"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Emily Davis",
                            PhoneNumber = "5566778899"
                        },
                        new
                        {
                            Id = 5,
                            Name = "William Brown",
                            PhoneNumber = "6677889900"
                        });
                });

            modelBuilder.Entity("RepairPK.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<short>("Rating")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Отличная работа! Быстро и качественно.",
                            CustomerId = 1,
                            Date = new DateTime(2024, 12, 17, 7, 58, 24, 585, DateTimeKind.Utc).AddTicks(3408),
                            Rating = (short)5
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Хорошая диагностика, но могли бы сделать скидку.",
                            CustomerId = 2,
                            Date = new DateTime(2024, 12, 17, 7, 58, 24, 585, DateTimeKind.Utc).AddTicks(3410),
                            Rating = (short)4
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Понравилось обслуживание, рекомендую!",
                            CustomerId = 3,
                            Date = new DateTime(2024, 12, 17, 7, 58, 24, 585, DateTimeKind.Utc).AddTicks(3411),
                            Rating = (short)5
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Работу сделали, но сроки немного затянули.",
                            CustomerId = 4,
                            Date = new DateTime(2024, 12, 17, 7, 58, 24, 585, DateTimeKind.Utc).AddTicks(3412),
                            Rating = (short)3
                        },
                        new
                        {
                            Id = 5,
                            Comment = "Супер! Всё работает как надо.",
                            CustomerId = 5,
                            Date = new DateTime(2024, 12, 17, 7, 58, 24, 585, DateTimeKind.Utc).AddTicks(3413),
                            Rating = (short)5
                        });
                });

            modelBuilder.Entity("RepairPK.Models.Hardware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Hardwares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manufacturer = "ASUS",
                            Model = "PRIME B550M",
                            OrderId = 1,
                            SerialNumber = "SN123456789",
                            Type = "Motherboard"
                        },
                        new
                        {
                            Id = 2,
                            Manufacturer = "NVIDIA",
                            Model = "RTX 3080",
                            OrderId = 2,
                            SerialNumber = "SN987654321",
                            Type = "Graphics Card"
                        },
                        new
                        {
                            Id = 3,
                            Manufacturer = "Corsair",
                            Model = "RM750x",
                            OrderId = 3,
                            SerialNumber = "SN112233445",
                            Type = "Power Supply"
                        },
                        new
                        {
                            Id = 4,
                            Manufacturer = "Intel",
                            Model = "i7-11700K",
                            OrderId = 4,
                            SerialNumber = "SN998877665",
                            Type = "CPU"
                        },
                        new
                        {
                            Id = 5,
                            Manufacturer = "Samsung",
                            Model = "970 EVO Plus 1TB",
                            OrderId = 5,
                            SerialNumber = "SN554433221",
                            Type = "SSD"
                        });
                });

            modelBuilder.Entity("RepairPK.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("PaymentStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompletionDate = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            PaymentStatus = true,
                            TotalAmount = 250.00m
                        },
                        new
                        {
                            Id = 2,
                            CompletionDate = new DateTime(2024, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            PaymentStatus = false,
                            TotalAmount = 180.00m
                        },
                        new
                        {
                            Id = 3,
                            CompletionDate = new DateTime(2024, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 3,
                            PaymentStatus = true,
                            TotalAmount = 300.00m
                        },
                        new
                        {
                            Id = 4,
                            CompletionDate = new DateTime(2024, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 4,
                            PaymentStatus = true,
                            TotalAmount = 90.00m
                        },
                        new
                        {
                            Id = 5,
                            CompletionDate = new DateTime(2024, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 5,
                            PaymentStatus = false,
                            TotalAmount = 400.00m
                        });
                });

            modelBuilder.Entity("RepairPK.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Parts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SSD 512GB",
                            Price = 120.50m,
                            QuantityAvailable = 10
                        },
                        new
                        {
                            Id = 2,
                            Name = "Power Supply 600W",
                            Price = 75.00m,
                            QuantityAvailable = 5
                        },
                        new
                        {
                            Id = 3,
                            Name = "RAM 16GB DDR4",
                            Price = 89.99m,
                            QuantityAvailable = 20
                        },
                        new
                        {
                            Id = 4,
                            Name = "CPU Intel i5-12400F",
                            Price = 199.99m,
                            QuantityAvailable = 7
                        },
                        new
                        {
                            Id = 5,
                            Name = "GPU Nvidia RTX 3060",
                            Price = 399.99m,
                            QuantityAvailable = 3
                        });
                });

            modelBuilder.Entity("RepairPK.Models.Repair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("CountPart")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HardwareId")
                        .HasColumnType("int");

                    b.Property<int?>("PartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RepairDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("HardwareId");

                    b.HasIndex("PartId");

                    b.ToTable("Repairs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 120.00m,
                            CountPart = 4,
                            Description = "Замена конденсаторов на материнской плате",
                            HardwareId = 1,
                            PartId = 1,
                            RepairDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Cost = 200.00m,
                            CountPart = 1,
                            Description = "Пайка чипа видеокарты",
                            HardwareId = 2,
                            PartId = 2,
                            RepairDate = new DateTime(2024, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Cost = 150.00m,
                            CountPart = 1,
                            Description = "Замена блока питания на новый",
                            HardwareId = 3,
                            PartId = 3,
                            RepairDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Cost = 90.00m,
                            CountPart = 2,
                            Description = "Установка системы охлаждения для процессора",
                            HardwareId = 4,
                            PartId = 4,
                            RepairDate = new DateTime(2024, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Cost = 80.00m,
                            CountPart = 1,
                            Description = "Установка SSD и перенос данных",
                            HardwareId = 5,
                            PartId = 5,
                            RepairDate = new DateTime(2024, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RepairPK.Models.Appointment", b =>
                {
                    b.HasOne("RepairPK.Models.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RepairPK.Models.Feedback", b =>
                {
                    b.HasOne("RepairPK.Models.Customer", "Customer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RepairPK.Models.Hardware", b =>
                {
                    b.HasOne("RepairPK.Models.Order", "Order")
                        .WithMany("Hardwares")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RepairPK.Models.Order", b =>
                {
                    b.HasOne("RepairPK.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RepairPK.Models.Repair", b =>
                {
                    b.HasOne("RepairPK.Models.Hardware", "Hardware")
                        .WithMany()
                        .HasForeignKey("HardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairPK.Models.Part", "Part")
                        .WithMany("Repairs")
                        .HasForeignKey("PartId");

                    b.Navigation("Hardware");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("RepairPK.Models.Customer", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("RepairPK.Models.Order", b =>
                {
                    b.Navigation("Hardwares");
                });

            modelBuilder.Entity("RepairPK.Models.Part", b =>
                {
                    b.Navigation("Repairs");
                });
#pragma warning restore 612, 618
        }
    }
}
